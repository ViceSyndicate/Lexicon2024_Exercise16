@page "/machines"
@using Industriell_Maskinpark_API.Models
@using Industriell_Maskinpark_API.ViewModels
@using Industriell_Maskinpark_Blazor.Services
@inject MachineService MachineService
@inject NavigationManager NavigationManager
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Machines</PageTitle>

<h1>Machines</h1>

@if (machines == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Last Contact</th>
                <th>Last Msg</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var machine in machines)
            {
                <tr>

                    <td>@machine.Id</td>
                    <td>@machine.Name</td>
                    <td>@machine.LatestContact</td>
                    <td>@machine.LastMessage</td>
                    <td>@machine.Status</td>
                    <td>

                        <button class="btn btn-success" @onclick="() => EditMachine(machine.Id)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
                                <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492M5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0" />
                                <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115z" />
                            </svg>
                        </button>

                        <button class="btn btn-success" @onclick="() => SendMessage(machine.Id)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-left" viewBox="0 0 16 16">
                                <path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                            </svg>
                        </button>

                        @if(machine.Status == "Online")
                        {
                            <button class="btn btn-success" @onclick="() => OnOff(machine)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-power" viewBox="0 0 16 16" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill="">
                                <path d="M7.5 1v7h1V1z"></path>
                                <path d="M3 8.812a5 5 0 0 1 2.578-4.375l-.485-.874A6 6 0 1 0 11 3.616l-.501.865A5 5 0 1 1 3 8.812"></path>
                                </svg>
                            </button>
                        } 
                        else if(machine.Status == "Offline")
                        {
                            <button type="button" class="btn btn-outline-danger" @onclick="() => OnOff(machine)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-power" viewBox="0 0 16 16" style="--darkreader-inline-fill: currentColor;" data-darkreader-inline-fill="">
                                <path d="M7.5 1v7h1V1z"></path>
                                <path d="M3 8.812a5 5 0 0 1 2.578-4.375l-.485-.874A6 6 0 1 0 11 3.616l-.501.865A5 5 0 1 1 3 8.812"></path>
                                </svg>
                            </button>
                        }

                        <button class="btn btn-danger" @onclick="() => DeleteMachine(machine.Id)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"></path>
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"></path>
                            </svg>
                        </button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private MachineViewModel[]? machines;

    protected override async Task OnInitializedAsync()
    {
        await GetMachines();
    }

    public async Task EditMachine(Guid id)
    {
        NavigationManager.NavigateTo("edit-machine-form/" + id.ToString());
    }

    public async Task GetMachines()
    {
        List<MachineViewModel> MachineListVM = new List<MachineViewModel>();
        List<Machine> machinesFromApi = await MachineService.GetMachinesAsync();

        foreach (Machine machine in machinesFromApi)
        {
            MachineViewModel VMMachine = new MachineViewModel(machine);
            MachineListVM.Add(VMMachine);
        }

        machines = MachineListVM.ToArray();
    }

    public async Task SendMessage(Guid guid)
    {
        // TODO
    }

    public async Task DeleteMachine(Guid guid)
    {
        Console.WriteLine("Work?");
        bool result = await 
        MachineService.DeleteMachine(guid);
        if (result)
        {
            // Remove the machine from the machineList.
            machines = machines.Where(x => x.Id != guid).ToArray();
            StateHasChanged();
        }
    }

    public async Task OnOff(MachineViewModel machine)
    {
        Machine dto = new Machine(machine);

        var result = await MachineService.FlipPowerSwitch(dto);
        await GetMachines();
        StateHasChanged();
    }
}