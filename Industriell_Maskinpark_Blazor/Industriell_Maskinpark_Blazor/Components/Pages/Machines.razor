@page "/machines"
@using Industriell_Maskinpark_API.Models
@using Industriell_Maskinpark_API.ViewModels
@using Industriell_Maskinpark_Blazor.Services
@inject MachineService MachineService
@attribute [StreamRendering]

<PageTitle>Machines</PageTitle>

<h1>Machines</h1>

@if (machines == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Last Contact</th>
                <th>Last Msg</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var machine in machines)
            {
                <tr>

                    <td>@machine.Id</td>
                    <td>@machine.Name</td>
                    <td>@machine.LatestContact</td>
                    <td>@machine.LastMessage</td>
                    <td>@machine.Status</td>
                    <td>
                        <button class="btn btn-success" @onclick="() => DeleteMachine(machine.Id)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chat-dots" viewBox="0 0 16 16">
                                <path d="M5 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2"></path>
                                <path d="m2.165 15.803.02-.004c1.83-.363 2.948-.842 3.468-1.105A9 9 0 0 0 8 15c4.418 0 8-3.134 8-7s-3.582-7-8-7-8 3.134-8 7c0 1.76.743 3.37 1.97 4.6a10.4 10.4 0 0 1-.524 2.318l-.003.011a11 11 0 0 1-.244.637c-.079.186.074.394.273.362a22 22 0 0 0 .693-.125m.8-3.108a1 1 0 0 0-.287-.801C1.618 10.83 1 9.468 1 8c0-3.192 3.004-6 7-6s7 2.808 7 6-3.004 6-7 6a8 8 0 0 1-2.088-.272 1 1 0 0 0-.711.074c-.387.196-1.24.57-2.634.893a11 11 0 0 0 .398-2"></path>
                            </svg>
                        </button>

                        <button class="btn btn-danger" @onclick="@(e => DeleteMachine(machine.Id))">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"></path>
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"></path>
                            </svg>
                        </button>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private MachineViewModel[]? machines;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        List<MachineViewModel> MachineListVM = new List<MachineViewModel>();
        List<Machine> machinesFromApi = await MachineService.GetMachinesAsync();

        foreach (Machine machine in machinesFromApi)
        {
            MachineViewModel VMMachine = new MachineViewModel(machine);
            MachineListVM.Add(VMMachine);
        }

        machines = MachineListVM.ToArray();
    }

    public async Task DeleteMachine(Guid guid)
    {
        Console.WriteLine("Work?");
        bool result = await 
        MachineService.DeleteMachine(guid);
        if (result)
        {
            // Remove the machine from the machineList.
            machines = machines.Where(x => x.Id != guid).ToArray();
            StateHasChanged();
        }
    }
}